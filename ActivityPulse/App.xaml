<Application x:Class="ActivityPulse.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ActivityPulse"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:prop="clr-namespace:ActivityPulse.Settings"
             StartupUri="MainWindow.xaml">
    
    <Application.Resources>
        <sys:String x:Key="WindowTitle">Activity Pulse</sys:String>
        
        <FontFamily x:Key="FAsolid">/Fonts/FAsolid900.otf#Font Awesome 6 Free Solid</FontFamily>
        <FontFamily x:Key="FAbrands">/Fonts/FAbrands.otf#Font Awesome 6 Brands Regular</FontFamily>
        <FontFamily x:Key="FAregular">/Fonts/FAregular.otf#Font Awesome 6 Free Regular</FontFamily>
        <FontFamily x:Key="Nunito">/Resources/Fonts/Nunito.ttf#Nunito</FontFamily>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>

        <SolidColorBrush x:Key="DarkBackground" Color="#ff121212"/>
        <SolidColorBrush x:Key="DarkMenu" Color="#1e1e1e" />
        <SolidColorBrush x:Key="DarkSecondMenu" Color="#1a1a1a" />
        <SolidColorBrush x:Key="DarkMiddleground" Color="#282828"/>
        <SolidColorBrush x:Key="DarkForeground" Color="White"/>

        <SolidColorBrush x:Key="LightBackground" Color="White"/>
        <SolidColorBrush x:Key="LightMenu" Color="#f2f2f2" />
        <SolidColorBrush x:Key="LightSecondMenu" Color="#eeeeee" />
        <SolidColorBrush x:Key="LightMiddleground" Color="#e5e5e5"/>
        <SolidColorBrush x:Key="LightForeground" Color="#ff373737"/>

        <Color x:Key="AccentColor">Lime</Color>
        <SolidColorBrush x:Key="AccentBrush" Color="{DynamicResource AccentColor}" />

        <Color x:Key="ThemeAccentColorL" >#000</Color>
        <Color x:Key="ThemeAccentColorD" >#000</Color>
        <SolidColorBrush x:Key="ThemeBackground" Color="#000" />
        <SolidColorBrush x:Key="ThemeMenu" Color="#000" />
        <SolidColorBrush x:Key="ThemeSecondMenu" Color="#000" />
        <SolidColorBrush x:Key="ThemeMiddleground" Color="#000" />
        <SolidColorBrush x:Key="ThemeForeground" Color="#000" />
        <SolidColorBrush x:Key="ThemeAccentD" Color="#000" />
        <SolidColorBrush x:Key="ThemeAccentL" Color="#000" />



        <!--COLROS-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>
        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>
        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>
        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>
        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>
        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>
        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>
        <Color x:Key="HoverColor">LightBlue</Color>
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>
        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>
        


        <!--Styles-->
        <!--======================================-->

        <!--SCROLLER-->
        <!--======================================-->
        <Style x:Key="LeftUpScroller" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border Grid.Column="1" Grid.Row="0" Grid.RowSpan="2">
                                <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" />
                            </Border>
                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="0" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="Border" Margin="1" CornerRadius="2" BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="Gray" />
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" >
                                <Path.Fill>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
                                </Path.Fill>
                            </Path>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid Width="5" Margin="0,-8,0,-8" x:Name="grid">
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="10" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition MaxHeight="10" />
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="10" Background="Transparent" />
                <!--<RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" Visibility="Collapsed" x:Name="rb_u"/>-->
                <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0">
                            <Thumb.Background>
                                <SolidColorBrush Color="#ff656565" />
                            </Thumb.Background>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <!--<RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" Visibility="Collapsed" x:Name="rb_d"/>-->
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True" SourceName="grid">
                    <!--<Setter Property="Visibility" TargetName="rb_u" Value="Visible"/>
            <Setter Property="Visibility" TargetName="rb_d" Value="Visible" />-->
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Width" Storyboard.TargetName="grid" To="12" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Width" Storyboard.TargetName="grid" To="5" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False" SourceName="grid">
                    <!--<Setter Property="Visibility" TargetName="rb_u" Value="Collapsed"/>
            <Setter Property="Visibility" TargetName="rb_d" Value="Collapsed" />-->
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid x:Name="grid" Height="5" Margin="0,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="10" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition MaxWidth="10" Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="Transparent" />
                <!--<RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />-->
                <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1">
                            <Thumb.Background>
                                <SolidColorBrush Color="#ff656565"/>
                            </Thumb.Background>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <!--<RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z" />-->
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True" SourceName="grid">
                    <!--<Setter Property="Visibility" TargetName="rb_u" Value="Visible"/>
            <Setter Property="Visibility" TargetName="rb_d" Value="Visible" />-->
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Height" Storyboard.TargetName="grid" To="12" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Height" Storyboard.TargetName="grid" To="5" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False" SourceName="grid">
                    <!--<Setter Property="Visibility" TargetName="rb_u" Value="Collapsed"/>
            <Setter Property="Visibility" TargetName="rb_d" Value="Collapsed" />-->
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Button-->
        <!--======================================-->
        <Style TargetType="Button" x:Key="LinkButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="bdr_btn_cc" CornerRadius="10" Background="Transparent">
                            <ContentPresenter x:Name="content" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="bsb_2_b">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" To="DarkGray"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="bsb_2_e">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsPressed" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="bsb_1_b">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" To="#9e9e9e"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="bsb_1_e">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="bdr_btn_cc" Property="Opacity" Value="0.5"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="CustomButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="bdr_btn_cc" CornerRadius="6" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="content" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="bsb_2_b">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color" To="CadetBlue"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="bsb_2_e">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsPressed" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="bsb_1_b">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color" To="#7f8c8d"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="bsb_1_e">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Background" TargetName="bdr_btn_cc" Value="{DynamicResource SystemColor}" />
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Background" TargetName="bdr_btn_cc" Value="{DynamicResource SystemColor}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Background" TargetName="bdr_btn_cc" Value="{DynamicResource ThemeMenu}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="bdr_btn_cc" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="RoundButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="bdr_btn_cc" CornerRadius="25" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="content" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="bsb_2_b">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color" To="CadetBlue"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="bsb_2_e">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsPressed" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="bsb_1_b">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color" To="#7f8c8d"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="bsb_1_e">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Background" TargetName="bdr_btn_cc" Value="{DynamicResource SystemColor}" />
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Background" TargetName="bdr_btn_cc" Value="{DynamicResource SystemColor}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Background" TargetName="bdr_btn_cc" Value="{DynamicResource ThemeMenu}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="bdr_btn_cc" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="ModernButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="bdr_btn_cc" CornerRadius="6" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="content" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="bsb_2_b">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color" To="CadetBlue"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="bsb_2_e">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsPressed" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="bsb_1_b">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color" To="#7f8c8d"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="bsb_1_e">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="bdr_btn_cc" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="WindowCloseBTN" TargetType="Button">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="bdr" Background="Transparent" >
                            <ContentPresenter x:Name="content"  Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="bdr" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#c0392b" />
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="content" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" To="White"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="bdr" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"  />
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="content" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="WindowBTN" TargetType="Button">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="bdr" Background="Transparent">
                            <ContentPresenter x:Name="content" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="bdr" FillBehavior="HoldEnd" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#7f8c8d" />
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" To="White"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="bdr" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"  />
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--COMBOBOX-->
        <!--========================================-->
        <ControlTemplate x:Key="ComboBoxToggleButtonV2" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}">
                </Border>
                <Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1" >
                    <Border.Background>
                        <SolidColorBrush Color="Transparent"/>
                    </Border.Background>
                </Border>
                <!--<Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="5,0" Fill="{TemplateBinding Foreground}">
        </Path>-->
            </Grid>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsChecked" Value="False"/>
                        <Condition Property="IsMouseOver" Value="True"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" To="#9e9e9e"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.ExitActions>
                </MultiTrigger>
                <Trigger Property="IsChecked" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" To="2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTextBoxV2" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboV2" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="MinWidth" Value="100" />
            <Setter Property="MinHeight" Value="50" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="45" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.5">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButtonV2}" Grid.ColumnSpan="2" Grid.Column="0" Focusable="false" ClickMode="Press" Foreground="{TemplateBinding Foreground}" Background="Transparent" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2"/>
                            <ContentPresenter x:Name="ContentSite" Grid.Column="1" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="5,7">
                            </ContentPresenter>
                            <TextBox x:Name="PART_EditableTextBox" Grid.Column="1" Style="{x:Null}" Template="{StaticResource ComboBoxTextBoxV2}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <TextBlock Text="{TemplateBinding ToolTip}" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,4" FontSize="16" FontWeight="Medium" IsHitTestVisible="False"/>
                            <TextBlock Text="{TemplateBinding Tag}" HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Center" Margin="13,3,10,3" FontSize="18" FontFamily="{StaticResource FAsolid}" IsHitTestVisible="False"/>
                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2">
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="5" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Background" Value="#ff282828" />
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource DarkForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Background" Value="#ffc9c9c9" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Background" Value="{DynamicResource ThemeAccentD}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TextBlock-->
        <!--======================================-->
        <Style x:Key="ModeTextBlock" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!--TEXTBOX-->
        <!--======================================-->
        <Style TargetType="{x:Type TextBox}" x:Key="DefaultTB">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border Name="Border" CornerRadius="6" Padding="2" BorderThickness="2" BorderBrush="Transparent">
                            <Grid>
                                <ScrollViewer Margin="3,0" x:Name="PART_ContentHost" />
                                <TextBlock x:Name="Placeholder" Visibility="Collapsed" Text="{TemplateBinding Tag}" VerticalAlignment="Center" FontStyle="Italic" Opacity="0.7" Padding="5,0" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource DarkBackground}" />
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="CaretBrush" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource LightBackground}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource LightForeground}" />
                                <Setter Property="CaretBrush" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="CaretBrush" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource ThemeBackground}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                            <Trigger Property="Text" Value="">
                                <Setter Property="Visibility" TargetName="Placeholder" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsSelectionActive" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#9e9e9e">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" >
                                            </ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#9e9e9e"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Container-->
        <!--=====================================-->
        <Style x:Key="Menu" TargetType="Grid">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource LightMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeMenu}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Background" TargetType="Grid">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource DarkMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MenuSP" TargetType="StackPanel">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource LightMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeMenu}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BackgroundSP" TargetType="StackPanel">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource DarkMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Stroke" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="#ff909090" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeForeground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Border" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                    <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                    <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource ThemeForeground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Bar" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                    <Setter Property="Background" Value="#ff282828" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                    <Setter Property="Background" Value="{DynamicResource LightMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeAccentD}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource ThemeForeground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BdrBackground" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource DarkMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!--ListBox / ListBoxItem-->
        <!--========================================-->
        <Style x:Key="LB_FullHorizontal"
TargetType="ListBox">
            <Setter Property="SnapsToDevicePixels"
   Value="true" />
            <Setter Property="OverridesDefaultStyle"
   Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
   Value="Hidden" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
   Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
   Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" >
                            <ScrollViewer Margin="0" Focusable="false" HorizontalAlignment="Center" Style="{StaticResource LeftUpScroller}">
                                <StackPanel Orientation="Horizontal" Margin="2" IsItemsHost="True"  />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource DisabledControlLightColor}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Border" Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
                                    </Setter.Value>

                                </Setter>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource DarkForeground}" />

                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LB_horizontal"
TargetType="ListBox">
            <Setter Property="SnapsToDevicePixels"
   Value="true" />
            <Setter Property="OverridesDefaultStyle"
   Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
   Value="Hidden" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
   Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
   Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" >
                            <ScrollViewer Margin="0" Focusable="false">
                                <WrapPanel Orientation="Horizontal" MaxWidth="{TemplateBinding ActualWidth}" Margin="2" IsItemsHost="True" HorizontalAlignment="Center"  />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource DisabledControlLightColor}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Border" Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
                                    </Setter.Value>

                                </Setter>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource DarkForeground}" />

                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LB_vertical"
TargetType="ListBox">
            <Setter Property="SnapsToDevicePixels"
   Value="true" />
            <Setter Property="OverridesDefaultStyle"
   Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
   Value="Hidden" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
   Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
   Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" >
                            <ScrollViewer Margin="0" Focusable="false">
                                <StackPanel Orientation="Vertical" Width="{TemplateBinding ActualWidth}" Margin="2" IsItemsHost="True" />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource DarkForeground}" />

                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LB_verticalNoScroll"
TargetType="ListBox">
            <Setter Property="SnapsToDevicePixels"
   Value="true" />
            <Setter Property="OverridesDefaultStyle"
   Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
   Value="Hidden" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
   Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
   Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" >
                            <StackPanel Orientation="Vertical" Width="{TemplateBinding ActualWidth}" Margin="2" IsItemsHost="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource DarkForeground}" />

                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ListBoxItem}"
TargetType="ListBoxItem">
            <Setter Property="SnapsToDevicePixels"
   Value="true" />
            <Setter Property="OverridesDefaultStyle"
   Value="true" />
            <Setter Property="Margin" Value="10,10,10,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Border" Padding="0" Margin="0,0,10,0" SnapsToDevicePixels="true" CornerRadius="10" BorderThickness="2" BorderBrush="Transparent">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent" />
                            </Border.Background>
                            <ContentPresenter x:Name="content"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color" To="{x:Static SystemParameters.WindowGlassColor}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color" To="{x:Static SystemParameters.WindowGlassColor}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--PATH-->
        <!--========================================-->
        <Style TargetType="Path" x:Key="DefaultPath">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Fill" Value="{DynamicResource DarkBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Fill" Value="{DynamicResource LightMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Fill" Value="{DynamicResource ThemeMenu}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--RADIOBUTTONS-->
        <!--========================================-->
        <Style TargetType="RadioButton" x:Key="CheckRB" >
            <Setter Property="FontFamily" Value="{StaticResource Nunito}" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="10,6" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Name="bdr_btn_cc" CornerRadius="15" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}" Background="Transparent">
                            <Grid>
                                <Border x:Name="bg" Opacity="0.2" CornerRadius="15" />
                                <ContentPresenter x:Name="content" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                <Path Margin="1,1,15,0" Width="9" Height="10" HorizontalAlignment="Right" x:Name="CheckMark" SnapsToDevicePixels="False" StrokeThickness="2" Data="M -0.5 4 L 3 8 8 0" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="bg" Value="#7f8c8d" />
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="bg" Value="{DynamicResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource AccentBrush}" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Background" TargetName="bdr_btn_cc" Value="Transparent" />
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Stroke" TargetName="CheckMark" Value="{DynamicResource DarkForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Background" TargetName="bdr_btn_cc" Value="Transparent" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Stroke" TargetName="CheckMark" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Background" TargetName="bdr_btn_cc" Value="{DynamicResource ThemeMenu}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Stroke" TargetName="CheckMark" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="bdr_btn_cc" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TOOLTIP-->
        <!--========================================-->
        <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border Name="Border" BorderThickness="1.5">
                            <ContentPresenter x:Name="content" Margin="4" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" Value="true">
                                <Setter TargetName="Border" Property="CornerRadius" Value="5" />
                                <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource DarkMenu}" />
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource LightBackground}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource ThemeBackground}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
