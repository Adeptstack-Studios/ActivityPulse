<Application x:Class="ActivityPulse.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ActivityPulse"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:prop="clr-namespace:ActivityPulse.Settings"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <sys:String x:Key="WindowTitle">Activity Pulse</sys:String>
        
        <FontFamily x:Key="FAsolid">/Fonts/FAsolid900.otf#Font Awesome 6 Free Solid</FontFamily>
        <FontFamily x:Key="FAbrands">/Fonts/FAbrands.otf#Font Awesome 6 Brands Regular</FontFamily>
        <FontFamily x:Key="FAregular">/Fonts/FAregular.otf#Font Awesome 6 Free Regular</FontFamily>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>

        <SolidColorBrush x:Key="DarkBackground" Color="#ff222222"/>
        <SolidColorBrush x:Key="DarkMenu" Color="#ff303030" />
        <SolidColorBrush x:Key="DarkForeground" Color="White"/>

        <SolidColorBrush x:Key="LightBackground" Color="White"/>
        <SolidColorBrush x:Key="LightMenu" Color="#d1dfe6" />
        <SolidColorBrush x:Key="LightForeground" Color="#ff373737"/>

        <SolidColorBrush x:Key="SystemColor" Color="{x:Static SystemParameters.WindowGlassColor}" />
        <Color x:Key="SystemColorColor">DeepSkyBlue</Color>

        <Color x:Key="ThemeAccentColorL" >#000</Color>
        <Color x:Key="ThemeAccentColorD" >#000</Color>
        <SolidColorBrush x:Key="ThemeBackground" Color="#000" />
        <SolidColorBrush x:Key="ThemeMenu" Color="#000" />
        <SolidColorBrush x:Key="ThemeForeground" Color="#000" />
        <SolidColorBrush x:Key="ThemeAccentD" Color="#000" />
        <SolidColorBrush x:Key="ThemeAccentL" Color="#000" />
        
        
        <!--Styles-->
        <!--======================================-->

        <!--SCROLLER-->
        <!--======================================-->
        <Style x:Key="LeftUpScroller" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border Grid.Column="1" Grid.Row="0" Grid.RowSpan="2">
                                <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" />
                            </Border>
                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="0" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Button-->
        <!--======================================-->
        <Style TargetType="Button" x:Key="LinkButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="bdr_btn_cc" CornerRadius="10" Background="Transparent">
                            <ContentPresenter x:Name="content" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="bsb_2_b">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" To="DarkGray"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="bsb_2_e">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsPressed" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="bsb_1_b">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" To="#9e9e9e"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="bsb_1_e">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="bdr_btn_cc" Property="Opacity" Value="0.5"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="CustomButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="bdr_btn_cc" CornerRadius="8" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="content" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="bsb_2_b">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color" To="CadetBlue"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="bsb_2_e">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsPressed" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="bsb_1_b">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color" To="#7f8c8d"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="bsb_1_e">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Background" TargetName="bdr_btn_cc" Value="{DynamicResource SystemColor}" />
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Background" TargetName="bdr_btn_cc" Value="{DynamicResource SystemColor}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Background" TargetName="bdr_btn_cc" Value="{DynamicResource ThemeMenu}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="bdr_btn_cc" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="ModernButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="bdr_btn_cc" CornerRadius="8" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="content" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="bsb_2_b">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color" To="CadetBlue"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="bsb_2_e">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsPressed" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="bsb_1_b">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color" To="#7f8c8d"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="bsb_1_e">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="bdr_btn_cc" Storyboard.TargetProperty="Background.Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="BorderBrush" TargetName="bdr_btn_cc" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="bdr_btn_cc" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TextBlock-->
        <!--======================================-->
        <Style x:Key="ModeTextBlock" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!--TEXTBOX-->
        <!--======================================-->
        <Style TargetType="{x:Type TextBox}" x:Key="DefaultTB">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border Name="Border" CornerRadius="10" Padding="2" BorderThickness="2" BorderBrush="Transparent">
                            <Grid>
                                <ScrollViewer Margin="3,0" x:Name="PART_ContentHost" />
                                <TextBlock x:Name="Placeholder" Visibility="Collapsed" Text="{TemplateBinding Tag}" VerticalAlignment="Center" FontStyle="Italic" Opacity="0.7" Padding="5,0" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource DarkBackground}" />
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="CaretBrush" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource LightBackground}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource LightForeground}" />
                                <Setter Property="CaretBrush" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="CaretBrush" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource ThemeBackground}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                            <Trigger Property="Text" Value="">
                                <Setter Property="Visibility" TargetName="Placeholder" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsSelectionActive" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#9e9e9e">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" >
                                            </ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#9e9e9e"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Container-->
        <!--=====================================-->
        <Style x:Key="Menu" TargetType="Grid">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource LightMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeMenu}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Background" TargetType="Grid">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource DarkMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MenuSP" TargetType="StackPanel">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource LightMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeMenu}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BackgroundSP" TargetType="StackPanel">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource DarkMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Stroke" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="#ff909090" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeForeground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Border" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                    <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                    <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource ThemeForeground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Bar" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                    <Setter Property="Background" Value="#ff282828" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                    <Setter Property="Background" Value="{DynamicResource LightMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeAccentD}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource ThemeForeground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BdrBackground" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource DarkMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                    <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!--ListBox / ListBoxItem-->
        <!--========================================-->
        <Style x:Key="LB_FullHorizontal"
TargetType="ListBox">
            <Setter Property="SnapsToDevicePixels"
   Value="true" />
            <Setter Property="OverridesDefaultStyle"
   Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
   Value="Hidden" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
   Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
   Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" >
                            <ScrollViewer Margin="0" Focusable="false" HorizontalAlignment="Center" Style="{StaticResource LeftUpScroller}">
                                <StackPanel Orientation="Horizontal" Margin="2" IsItemsHost="True"  />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource DisabledControlLightColor}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Border" Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
                                    </Setter.Value>

                                </Setter>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource DarkForeground}" />

                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LB_horizontal"
TargetType="ListBox">
            <Setter Property="SnapsToDevicePixels"
   Value="true" />
            <Setter Property="OverridesDefaultStyle"
   Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
   Value="Hidden" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
   Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
   Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" >
                            <ScrollViewer Margin="0" Focusable="false">
                                <WrapPanel Orientation="Horizontal" MaxWidth="{TemplateBinding ActualWidth}" Margin="2" IsItemsHost="True" HorizontalAlignment="Center"  />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource DisabledControlLightColor}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Border" Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
                                    </Setter.Value>

                                </Setter>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource DarkForeground}" />

                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LB_vertical"
TargetType="ListBox">
            <Setter Property="SnapsToDevicePixels"
   Value="true" />
            <Setter Property="OverridesDefaultStyle"
   Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
   Value="Hidden" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
   Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
   Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" >
                            <ScrollViewer Margin="0" Focusable="false">
                                <StackPanel Orientation="Vertical" Width="{TemplateBinding ActualWidth}" Margin="2" IsItemsHost="True" />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource DarkForeground}" />

                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LB_verticalNoScroll"
TargetType="ListBox">
            <Setter Property="SnapsToDevicePixels"
   Value="true" />
            <Setter Property="OverridesDefaultStyle"
   Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
   Value="Hidden" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
   Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
   Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" >
                            <StackPanel Orientation="Vertical" Width="{TemplateBinding ActualWidth}" Margin="2" IsItemsHost="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Background" Value="{DynamicResource DarkBackground}" />
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource DarkForeground}" />

                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Background" Value="{DynamicResource LightBackground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ListBoxItem}"
TargetType="ListBoxItem">
            <Setter Property="SnapsToDevicePixels"
   Value="true" />
            <Setter Property="OverridesDefaultStyle"
   Value="true" />
            <Setter Property="Margin" Value="10,10,10,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Border" Padding="0" Margin="0,0,10,0" SnapsToDevicePixels="true" CornerRadius="10" BorderThickness="2" BorderBrush="Transparent">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent" />
                            </Border.Background>
                            <ContentPresenter x:Name="content"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color" To="{x:Static SystemParameters.WindowGlassColor}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color" To="{x:Static SystemParameters.WindowGlassColor}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--TOOLTIP-->
        <!--========================================-->
        <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border Name="Border" BorderThickness="1.5">
                            <ContentPresenter x:Name="content" Margin="4" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" Value="true">
                                <Setter TargetName="Border" Property="CornerRadius" Value="5" />
                                <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="1">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource DarkMenu}" />
                                <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="0">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource LightBackground}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource LightForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightForeground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static prop:AppSettings.Default}, Path=ThemeMode}" Value="2">
                                <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}" />
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource ThemeBackground}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ThemeForeground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
